node {
  def commitId
  // package.json 이 있는 폴더(루트면 "."):
  def PKG_DIR = '.'

  stage('Preparation') {
    checkout scm
    commitId = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
  }

  stage('Install & Test') {
    // Global Tool Configuration → NodeJS에서 등록한 이름으로 바꾸세요(예: 'nodejs' 또는 'nodejs-20')
    nodejs(nodeJSInstallationName: 'nodejs') {
      dir(PKG_DIR) {
        // lockfile 있으면 npm ci, 불일치 시 자동으로 npm install로 우회
        sh '''
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci --no-audit --fund=false || (echo "[WARN] lock out-of-sync -> npm install" && npm install --no-audit --fund=false)
          else
            npm install --no-audit --fund=false
          fi
        '''
        // test 폴더가 있을 때만 테스트 실행 (없으면 스킵)
        if (fileExists('test') || fileExists('__tests__')) {
          sh 'npm test'
        } else {
          echo 'No tests directory; skipping tests.'
        }
      }
    }
  }

  stage('Docker Build & Push') {
    // 자격증명ID 'dockerhub'는 Jenkins에 등록되어 있어야 합니다.
    docker.withRegistry('https://index.docker.io/v2/', 'dockerhub') {
      def img = docker.build("ejujin/docker-nodejs-demo:${commitId}", '.')
      img.push()
      img.push('latest')
    }
  }
}
