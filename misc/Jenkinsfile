pipeline {
    agent any
    tools {
        nodejs "nodeJs"
    }
    environment {
        DOCKER_BUILDKIT = "1" // BuildKit 활성화
        DOCKER_IMAGE = "ejujin/docker-nodejs-demo"
    }
    stages {
        stage('Preparation') {
            steps {
                script {
                    checkout scm
                    sh "git rev-parse --short HEAD > .git/commit-id"
                    env.COMMIT_ID = readFile('.git/commit-id').trim()

                    def nodejsTool = tool name: 'nodeJs', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
                    env.PATH = "${nodejsTool}/bin:${env.PATH}"
                }
            }
        }

        stage('Build') {
            steps {
                sh 'node -v'
                sh 'npm -v'
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: '6e025c89-6fb8-4e11-9894-10f0b0a40896', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh """
                            echo "Logging into Docker Hub..."
                            echo "\$DOCKER_PASS" | docker login -u "\$DOCKER_USER" --password-stdin

                            echo "Checking if Buildx is available..."
                            if ! docker buildx version > /dev/null 2>&1; then
                                echo "Buildx is missing, installing..."
                                mkdir -p ~/.docker/cli-plugins
                                curl -sL https://github.com/docker/buildx/releases/latest/download/buildx-linux-amd64 -o ~/.docker/cli-plugins/docker-buildx
                                chmod +x ~/.docker/cli-plugins/docker-buildx
                            fi
                            
                            echo "Setting up Docker Buildx..."
                            docker buildx create mybuilder || echo "Buildx builder already exists."

                            echo "Building Docker image with Buildx..."
                            docker buildx build --platform linux/amd64 -t \$DOCKER_IMAGE:\$COMMIT_ID --push .
                        """
                    }
                }
            }
        }
    }
}
