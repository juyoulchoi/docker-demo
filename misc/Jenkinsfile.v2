pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "ejujin/docker-nodejs-demo"
    }

    stages {
        stage('Preparation') {
            steps {
                script {
                    checkout scm
                    sh "git rev-parse --short HEAD > .git/commit-id"
                    env.COMMIT_ID = readFile('.git/commit-id').trim()
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    docker.image('node:16').pull()
                    docker.image('node:16').inside {
                        sh """
                            echo "Node.js 및 npm 버전 확인"
                            node -v
                            npm -v

                            echo "의존성 설치"
                            npm install --only=dev --legacy-peer-deps

                            echo "테스트 실행"
                            npm test || echo "테스트 실패!"
                        """
                    }
                }
            }
        }

        stage('Test with a DB') {
            steps {
                script {
                    echo "MySQL 컨테이너 실행"
                    def mysql = docker.image('mysql').run("-e MYSQL_ALLOW_EMPTY_PASSWORD=yes")

                    docker.image('node:16').pull()
                    docker.image('node:16').inside("--link ${mysql.id}:mysql") {
                        sh """
                            echo "MySQL 연결 테스트"
                            mysql --host=mysql --port=3306 -u root -e 'SHOW DATABASES;'

                            echo "의존성 설치"
                            npm install --only=dev --legacy-peer-deps

                            echo "테스트 실행"
                            npm test || echo "테스트 실패!"
                        """
                    }

                    echo "MySQL 컨테이너 종료"
                    mysql.stop()
                    mysql.remove()
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v2/', 'dockerhub') {
                        echo "Docker 이미지 빌드 및 푸시"
                        docker.build("${DOCKER_IMAGE}:${env.COMMIT_ID}", '.').push()
                    }
                }
            }
        }
    }
}
